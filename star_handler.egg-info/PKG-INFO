Metadata-Version: 2.1
Name: star_handler
Version: 2.0.0
Summary: A comprehensive toolkit for analyzing RELION STAR files
Home-page: 
Author: Siyu Chen
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Science/Research
Classifier: Topic :: Scientific/Engineering :: Bio-Informatics
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Requires-Python: >=3.8
Description-Content-Type: text/markdown
Requires-Dist: numpy>=1.20.0
Requires-Dist: pandas>=1.3.0
Requires-Dist: matplotlib>=3.4.0
Requires-Dist: scipy>=1.7.0
Requires-Dist: starfile>=0.4.0
Requires-Dist: requests>=2.25.0
Requires-Dist: click>=8.0

# STAR Handler

A comprehensive toolkit for analyzing RELION STAR files, with focus on particle distribution and spatial analysis.

## Features

- **Particle Classification**: Organize particles by metadata tags with flexible matching options
- **Radial Distribution Analysis**: Calculate g(r) to analyze particle spatial distributions
- **Cluster Analysis**: Identify and analyze particle clusters based on spatial proximity
- **Orientation Analysis**: Analyze particle orientations and their relationships
- **Class Distribution Analysis**: Analyze particle distribution across classification results
- **Combined Analysis**: Perform all analyses in one pass with comprehensive reporting
- **STAR File Management**: Support for both RELION and M (Warp) formats

## Installation

### From PyPI (Recommended)
```bash
pip install star-handler
```

### From Source
```bash
git clone <repository-url>
cd star-handler
pip install -r requirements.txt
pip install -e .
```

## Quick Start

### Command Line Interface

1. **Classify particles by metadata tag**:
```bash
# Classify by tomogram (default)
star-classify -f particles.star

# Classify by custom tag
star-classify -f particles.star -t rlnClassNumber

# Partial path matching (useful for long tomogram paths)
star-classify -f particles.star -p 2

# Custom output directory
star-classify -f particles.star -o classified_particles
```

2. **Analyze radial distribution**:
```bash
star-radial -f particles.star -b 50 -m 8000
```

3. **Analyze particle clusters**:
```bash
star-cluster -f particles.star -t 380
```

4. **Analyze orientations**:
```bash
star-orientation -f particles.star
```

5. **Analyze class distribution**:
```bash
# Basic usage with default settings
star-class-distribution -f run_it150_data.star

# Custom group column and output
star-class-distribution -f particles.star -g rlnTomoName -o distribution.txt

# Custom output directory
star-class-distribution -f particles.star --output-dir results
```

6. **Run all analyses**:
```bash
star-analyze -f particles.star
```

### Python API

```python
from star_handler.analyzers import (
    RadialAnalyzer, ClusterAnalyzer, 
    OrientationAnalyzer, ClassDistribution
)
from star_handler.core.star_handler import classify_star

# Classify particles
sub_files = classify_star("particles.star", tag="rlnClassNumber", partial_match=2)

# Radial analysis
radial = RadialAnalyzer("particles.star", bin_size=50)
radial.process()

# Cluster analysis
cluster = ClusterAnalyzer("particles.star", threshold=380)
cluster.process()

# Orientation analysis
orientation = OrientationAnalyzer("particles.star")
orientation.process()

# Class distribution analysis
distribution = ClassDistribution("run_it150_data.star")
dist_matrix, stats = distribution.analyze()
distribution.save_results(dist_matrix, stats, output_dir="results")
```

## Documentation

For detailed documentation, please refer to the [documentation site](docs-url).

## Requirements

- Python >= 3.8
- NumPy >= 1.20.0
- Pandas >= 1.3.0
- Matplotlib >= 3.4.0
- SciPy >= 1.7.0
- Starfile >= 0.4.0

## Development

1. Clone the repository
2. Install development dependencies:
```bash
pip install -r requirements.txt
```

3. Run tests:
```bash
pytest
```

## Contributing

Contributions are welcome! Please feel free to submit a Pull Request.

## License

This project is licensed under the MIT License - see the LICENSE file for details.
